---
import { Image } from 'astro:assets';

import wordmark from '@/assets/wordmark.svg';
import icon from '@/assets/icon.svg';

---


<!--=============== HEADER ===============-->
<header class="nav">
  <div class="nav__container">
    <div class="nav__logo">
      <a href="/" class="nav__logo-img">
        <Image src={icon} alt="Wordmark Logo" />
      </a>
    </div>
  </div>
</header>




<style lang="scss">
.nav {
  position: fixed;
  top: 0;
  width: 100%;
  z-index: 1000;
  
  &__container {
    display: flex;
    align-items: center;
    justify-content: space-between;
    max-width: var(--container--main--md);
    padding: .5rem;
    border-radius: var(--border-radius-small);
    margin: 1rem auto;
    width: fit-content;
    gap: 3rem;
    position: relative;
    z-index: 10;
  }

  &__logo-img {
    display: block;
    height: 100%;
    line-height: 0;

    svg, img {
      height: 125px;
      width: fit-content;
    }
  }
}

</style>

<script>
import gsap from "gsap";

// NAV
const hamburgerBtn = document.getElementById("hamburgerBtn") as HTMLElement;
const mobileNav = document.getElementById("mobileNav") as HTMLElement;
const topLine = document.querySelector('.line.top');
const middleLine = document.querySelector('.line.middle');
const bottomLine = document.querySelector('.line.bottom');
const circle = document.querySelector('.circle');
let isOpen = false;

const tl = gsap.timeline({ paused: true });

function hideNav(): void {
  gsap.set(mobileNav, { display: 'none' });
}

tl.to(middleLine, {
  duration: 0.2,
  opacity: 0,
  ease: 'power1.inOut'
}, 0)
.to(topLine, {
  duration: 0.3,
  rotate: 45,
  y: 8,
  ease: 'power2.inOut'
}, 0)
.to(bottomLine, {
  duration: 0.3,
  rotate: -45,
  y: -8,
  ease: 'power2.inOut'
}, 0)
.to(circle, {
  duration: 0.3,
  scale: 1.15,
  ease: 'power2.inOut'
}, 0);

hamburgerBtn.classList.remove("open");

hamburgerBtn.addEventListener("click", () => {
  mobileNav.classList.toggle("open");
  document.body.classList.toggle("menu-open");
  hamburgerBtn.classList.toggle("open");

  if (!isOpen) {
    // Reveal and animate in
    gsap.set(mobileNav, { display: 'flex', y: '-100%' });
    gsap.to(mobileNav, { duration: 0.5, y: '0%', ease: 'power2.out' });
    isOpen = true;
    tl.play();
  } else {
    // Animate out and hide
    gsap.to(mobileNav, {
      duration: 0.4,
      y: '-100%',
      ease: 'power2.in',
      onComplete: hideNav
    });
    tl.reverse();
    isOpen = false;
  }
});




window.addEventListener("scroll", () => {
  const header = document.querySelector(".nav") as HTMLElement;
  if (window.scrollY > 50) {
    header.classList.add("scrolled");
  } else {
    header.classList.remove("scrolled");
  }
});

// Get all nav links
const navLinks = document.querySelectorAll('nav a'); // Adjust selector to your actual nav links

navLinks.forEach(link => {
  // Cast link to HTMLAnchorElement to access href property
  const anchor = link as HTMLAnchorElement;
  const linkUrl = new URL(anchor.href, window.location.origin);
  // Compare only the pathname
  if (linkUrl.pathname === window.location.pathname) {
    anchor.classList.add('active');
  }
});
</script>

