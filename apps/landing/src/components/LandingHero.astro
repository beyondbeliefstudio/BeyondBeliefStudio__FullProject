---

import Heading from "@shared/components/Heading.astro";

---

<section class="hero">
    <div class="container-md hero__container hero__container">
        <div class="content-md hero__column hero__content">
            <Heading tag="h1" size="display" fontFamily="primary" marginBottom="l">Two Crafts.<br> One Purpose.</Heading>
            <Heading tag="h2" size="s" fontFamily="secondary" marginBottom="none">
                We print <span class="highlight">custom apparel</span> and design <span class="highlight">custom websites</span> â€” all by hand, all under one roof. 
            </Heading>
            <Heading tag="h3" size="s" fontFamily="secondary" marginBottom="none">
                Choose your path below.
            </Heading>
        </div>
        <div class="content-lg hero__column">
            <div class="hero__links" id="hero__links">
                <span class="hero__indicator" id="hero__indicator"></span>
                <a href="https://beyondbeliefscreenprint.netlify.app/" class="hero__link">
                    <Heading tag="h4" size="m" fontFamily="primary" marginBottom="none">Screen Printing</Heading>
                </a>
                <a href="https://beyondbeliefwebdesign.netlify.app/" class="hero__link">
                    <Heading tag="h4" size="m" fontFamily="primary" marginBottom="none">Web Design</Heading>
                </a>
            </div>
        </div>
    </div>

    <div id="blob"></div>
    <div id="blur"></div>
</section>

<style lang="scss">
.hero {
    overflow: hidden; 
    position: relative;
    height: fit-content;
    background-size: cover;
    background-position: center;
    background-repeat: no-repeat;
    transition: background-image 0.5s ease-in-out;

    &__container {
        height: 100%;
        min-height: 100vh;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        gap: 2rem;
        padding-top: 185px;
        padding-bottom: 185px;
    }

    &__links {
        position: relative;
        display: flex;
        align-items: center;
        justify-content: space-between;
        background: #ffffff5e;
        border-radius: 1000px;
        backdrop-filter: blur(6px);
        overflow: hidden;
    }

    &__link {
        display: flex;
        align-items: center;
        justify-content: center;
        padding: 1.5rem 3rem;
        font-size: 2rem;
        font-weight: 700;
        color: var(--dark-900);
        background: none;
        border: none;
        border-radius: 2rem;
        text-decoration: none;
        position: relative;
        z-index: 1;
        cursor: pointer;

        @media screen and (max-width: 768px) {
            padding: 1rem 1rem;
        }
    }

    &__indicator {
        position: absolute;
        top: 0;
        left: 0;
        height: 100%;
        border-radius: 1000px;
        background: var(--brand-primary);
        opacity: 1;
        z-index: 0;
        transition: left 0.25s cubic-bezier(0.4,0,0.2,1), width 0.25s cubic-bezier(0.4,0,0.2,1), transform 0.1s ease-out;
        pointer-events: none;
        transform-origin: center;
        
        &.pressed {
            transform: scaleX(0.95) scaleY(.85);
        }
    }

    &__content {
        text-wrap: balance;
    }

    &__column {
        position: relative;
        height: fit-content;
        z-index: 999;
        margin: 0;
    }
}

.highlight {
    position: relative;
    display: inline-block;
    cursor: pointer;

    &:before {
        position: absolute;
        content: '';
        width: 100%;
        height: 8px;
        left: 0;
        bottom: 7px;
        background: var(--brand-primary);
        border-radius: 100px;
        z-index: -1;
    }
}

h2 {
    font-weight: 400;
    text-transform: inherit !important;
    line-height: 1.5 !important;
}

h3 {
    margin-top: 2rem;
}

</style>


<script>
document.addEventListener('DOMContentLoaded', function() {
  const links = document.querySelectorAll('.hero__link');
  const indicator = document.getElementById('hero__indicator');
  const linksContainer = document.getElementById('hero__links');
  const highlightSpans = document.querySelectorAll('.highlight');
  
  let lastLink = null;
  
  function moveIndicatorTo(link) {
    const rect = link.getBoundingClientRect();
    const parentRect = linksContainer.getBoundingClientRect();
    indicator.style.width = rect.width + 'px';
    indicator.style.left = (rect.left - parentRect.left) + 'px';
    lastLink = link;
  }
  
  // Initialize indicator with first link
  if (links[0]) {
    moveIndicatorTo(links[0]);
  }
  
  // Global mouse tracking for screen position
  document.addEventListener('mousemove', (e) => {
    const screenWidth = window.innerWidth;
    const mouseX = e.clientX;
    const isLeftHalf = mouseX < screenWidth / 2;
    
    // Move indicator based on screen position
    if (isLeftHalf && links[0]) {
      moveIndicatorTo(links[0]);
    } else if (!isLeftHalf && links[1]) {
      moveIndicatorTo(links[1]);
    }
  });
  
  // Add click animation to hero links
  links.forEach(link => {
    link.addEventListener('mousedown', () => {
      indicator.classList.add('pressed');
    });
    
    link.addEventListener('mouseup', () => {
      indicator.classList.remove('pressed');
    });
    
    link.addEventListener('mouseleave', () => {
      indicator.classList.remove('pressed');
    });
  });
  

  
  window.addEventListener('resize', () => {
    if (lastLink) moveIndicatorTo(lastLink);
  });
});
</script>