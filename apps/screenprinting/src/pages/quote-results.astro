---
import Layout from "@/layouts/Layout.astro";
import Heading from "@shared/components/Heading.astro";
import Buttons from "@shared/components/Buttons.astro";
import InternalHero from "@shared/components/InternalHero.astro";
---

<Layout title="Your Quote Results">

<InternalHero title="Your Quote Results" subtitle="Here are the details of your custom screen printing quote. If you have any questions or are ready to move forward, please fill out the form below." ariaLabel="Quote Results Hero" classes="hero-quote-results" />

<section class="quote-results" aria-label="Quote Results">
    <div class="container-md quote-results__container">
        <div class="content-md quote-results__wrapper">
            <div class="quote-results__summary">
                <div class="quote-results__details">
                    <Heading tag="h2" size="l" fontFamily="primary" marginBottom="s">Your Quote Details</Heading>
                    <div id="quote-results__info">
                        <!-- Quote details will be populated by JavaScript -->
                    </div>
                </div>
            </div>

            <div class="contact-section">
                <Heading tag="h2" size="l" fontFamily="primary" marginBottom="s">Get More Information</Heading>
                <p>Ready to move forward? Fill out the form below and we'll contact you with next steps.</p>

                <form data-netlify="true" name="quote-results" id="quote-results__form" class="quote-results__form" method="POST" action="/quote-submitted">
                    <!-- Hidden fields for quote data -->
                    <input type="hidden" name="quote-garment" id="quote-garment">
                    <input type="hidden" name="quote-garmentQuality" id="quote-garmentQuality">
                    <input type="hidden" name="quote-quantity" id="quote-quantity">
                    <input type="hidden" name="quote-frontColors" id="quote-frontColors">
                    <input type="hidden" name="quote-backColors" id="quote-backColors">
                    <input type="hidden" name="quote-total" id="quote-total">
                    <input type="hidden" name="quote-costPerItem" id="quote-costPerItem">

                    <div class="form-group">
                        <label for="name" class="quote-results__label">Full Name *</label>
                        <input type="text" id="name" name="name" required class="quote-results__input">
                    </div>
                    
                    <div class="form-group">
                        <label for="email" class="quote-results__label">Email Address *</label>
                        <input type="email" id="email" name="email" required class="quote-results__input">
                    </div>
                    
                    <div class="form-group">
                        <label for="phone" class="quote-results__label">Phone Number *</label>
                        <input type="tel" id="phone" name="phone" required class="quote-results__input">
                    </div>
                    
                    <div class="form-group">
                        <label for="company" class="quote-results__label">Company/Organization</label>
                        <input type="text" id="company" name="company" class="quote-results__input">
                    </div>
                    
                    <div class="form-group">
                        <label for="message" class="quote-results__label">Additional Details</label>
                        <textarea id="message" name="message" rows="4" placeholder="Tell us about your project, timeline, design needs, etc." class="quote-results__input"></textarea>
                    </div>
                    
                    <Buttons type="submit" variant="primary">Send Quote Request</Buttons>
                    <div id="form-status"></div>
                </form>
            </div>
        </div>
    </div>
</section>
</Layout>

<style lang="scss" is:global>
.hero-quote-results {
    padding-bottom: 10rem;
}

.quote-results {
    &__container {
        padding-top: 0;
        position: relative;
        z-index: 999;
        margin-top: -10rem;
    }

    &__wrapper {
        width: 100%;
        background: #fff;
        padding: 2rem;
        border-radius: 16px;
        display: flex;
        flex-direction: column;
        gap: 3rem;

        @media screen and (max-width: 768px) {
            padding: 2rem 1rem 1rem;
        }
    }

    &__form {
        width: 100%;
        text-align: center;
        display: grid;
        gap: 1rem;
        max-width: 640px;
        margin: 0 auto;
    }

    .input-group {
        display: flex;
        flex-direction: row;
        grid-gap: .5rem;
        align-items: center;
        justify-content: center;

        @media (max-width: 768px) {
            display: grid;
            justify-content: space-between;
            grid-template-columns: auto 1fr auto;
        }
    }

    input[type="number"] {
        width: 100px;
        text-align: center;

        @media (max-width: 768px) {
            width: auto;
        }
    }

    .form-group {
        display: flex;
        flex-direction: column;
        gap: 0.5rem;

        label {
            font-weight: bold;
            text-align: left;
        }

        input, select {
            padding: 0.5rem;
            border-radius: 8px;
            border: 1px solid var(--light-200);
            font-size: 1rem;
        }
        
        textarea {
            padding: 0.5rem;
            border-radius: 8px;
            border: 1px solid var(--light-200);
            font-size: 1rem;
            height: 150px;
            resize: vertical;
        }
    }

    button {
        align-self: center;
    }
}

.quote-summary {
    background: var(--light-100);
    border-radius: var(--border-radius-medium);
    padding: 2rem;
    margin-bottom: 3rem;
}


.quote-details h3 {
    margin-bottom: 1rem;
    color: var(--brand-primary);
}

.quote-info-item {
    display: flex;
    justify-content: space-between;
    padding: 0.5rem 0;
    border-bottom: 1px solid var(--light-200);
    
    &:last-child {
        border-bottom: none;
        font-weight: bold;
        font-size: 1.2rem;
    }
}

.contact-section {
    display: flex;
    flex-direction: column;
    gap: .5rem;
}

.contact-form {
    max-width: 600px;
    display: flex;
    flex-direction: column;
    gap: 1rem;
}

.form-group {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;

    label {
        font-weight: bold;
    }

    input, textarea {
        padding: 0.75rem;
        border: 1px solid var(--light-200);
        border-radius: var(--border-radius-small);
        font-size: 1rem;
    }
}

#form-status {
    margin-top: 1rem;
    padding: 1rem;
    border-radius: var(--border-radius-small);
    
    &.success {
        background: #d4edda;
        color: #155724;
        border: 1px solid #c3e6cb;
    }
    
    &.error {
        background: #f8d7da;
        color: #721c24;
        border: 1px solid #f5c6cb;
    }
}


.pricing-comparison {
    margin-bottom: 1rem;
}

.price-row {
    display: flex;
    justify-content: center;
    align-items: center;
    padding: 0.25rem 0;
    gap: .5rem;
    line-height: 1;
    
    &.single-item {
        color: #6c757d;
        text-decoration: line-through;
        font-size: 1.25rem;

        @media screen and (max-width: 768px) {
            font-size: 1rem;
        }
    }
    
    &.volume-pricing {
        font-weight: bold;
        font-size: 1.5rem;
        
        @media screen and (max-width: 768px) {
            font-size: 1.15rem;
        }
    }
}

.savings-highlight {
    background: #f8f9fa;
    color: var(--dark-900);
    padding: 1rem;
    border-radius: var(--border-radius-small);
    text-align: center;
    font-weight: bold;
    margin-top: 1rem;
}

.quote-summary-details {
    background: var(--light-100);
    border-radius: var(--border-radius-medium);
    padding: 1.5rem;
    margin-bottom: 1.5rem;
    
    h4 {
        margin-bottom: 1rem;
        color: var(--brand-primary);
        font-size: 1.2rem;
    }
    
    .included-items {
        list-style: none;
        padding: 0;
        
        li {
            padding: 0.5rem 0;
            position: relative;
            padding-left: 1.5rem;
            
            &:before {
                content: "âœ“";
                position: absolute;
                left: 0;
                color: #28a745;
                font-weight: bold;
            }
        }
    }
}

.quote-breakdown {
    border-top: 1px solid var(--light-200);
    padding-top: 1rem;
    
    .breakdown-item {
        display: flex;
        justify-content: space-between;
        padding: 0.5rem 0;
        
        &:nth-child(odd) {
            background: rgba(0,0,0,0.02);
            margin: 0 -1rem;
            padding: 0.5rem 1rem;
        }
    }
}

</style>

<script>
document.addEventListener("DOMContentLoaded", function() {
    // Parse URL parameters and display quote info
    const urlParams = new URLSearchParams(window.location.search);
    const quoteInfo = document.getElementById('quote-results__info');
    
    if (urlParams.has('total')) {
        const garment = urlParams.get('garment');
        const garmentQuality = urlParams.get('garmentQuality');
        const quantity = parseInt(urlParams.get('quantity'));
        const frontColors = parseInt(urlParams.get('frontColors'));
        const backColors = parseInt(urlParams.get('backColors')) || 0;
        const total = parseFloat(urlParams.get('total'));
        const costPerItem = parseFloat(urlParams.get('costPerItem'));
        
        // Populate hidden form fields with quote data
        (document.getElementById('quote-garment') as HTMLInputElement).value = garment;
        (document.getElementById('quote-garmentQuality') as HTMLInputElement).value = garmentQuality;
        (document.getElementById('quote-quantity') as HTMLInputElement).value = quantity.toString();
        (document.getElementById('quote-frontColors') as HTMLInputElement).value = frontColors.toString();
        (document.getElementById('quote-backColors') as HTMLInputElement).value = backColors.toString();
        (document.getElementById('quote-total') as HTMLInputElement).value = total.toFixed(2);
        (document.getElementById('quote-costPerItem') as HTMLInputElement).value = costPerItem.toFixed(2);
        
        // Calculate single item pricing (typically much higher)
        const singleItemCost = costPerItem * 2.8;
        const singleItemTotal = singleItemCost * quantity;
        const savings = singleItemTotal - total;
        const savingsPercent = Math.round((savings / singleItemTotal) * 100);
        
        // Format garment name and colors description
        const garmentName = garment.charAt(0).toUpperCase() + garment.slice(1);
        const qualityName = garmentQuality.charAt(0).toUpperCase() + garmentQuality.slice(1);
        
        let colorsDescription = '';
        if (frontColors && backColors) {
            colorsDescription = `Screen Printing with ${frontColors} Color${frontColors > 1 ? 's' : ''} Front, ${backColors} Color${backColors > 1 ? 's' : ''} Back`;
        } else if (frontColors) {
            colorsDescription = `Screen Printing with ${frontColors} Color${frontColors > 1 ? 's' : ''} Front`;
        }
        
        quoteInfo.innerHTML = `
            <div class="pricing-comparison">

                <div class="price-row single-item">
                    <span class="price-amount">$${singleItemCost.toFixed(2)} each | $${singleItemTotal.toFixed(2)} total</span>
                </div>

                <div class="price-row volume-pricing">
                    <span class="price-amount highlighted">$${costPerItem.toFixed(2)} each | $${total.toFixed(2)} total</span>
                </div>

                <div class="savings-highlight">
                    You saved $${savings.toFixed(2)} (${savingsPercent}%) with the Volume Discount.
                </div>
            </div>
        `;
    } else {
        quoteInfo.innerHTML = '<p>No quote data found. Please return to the quote calculator.</p>';
    }
    
    // Handle form submission
    const contactForm = document.getElementById('quote-results__form') as HTMLFormElement;
    const formStatus = document.getElementById('form-status');
    
    if (contactForm && formStatus) {
        contactForm.addEventListener('submit', function(e) {
            // Let Netlify handle the form submission naturally
            formStatus.textContent = 'Sending your quote request...';
            formStatus.className = '';
        });
    }
});
</script>